;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;VARIABLES;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defvar bar_rev false)

(defpoll speaker_icon :interval "2s" "
    /etc/nixos/dotfiles/eww/scripts/speaker_icon.sh
")
(defpoll volume_speaker :interval "2s" "
    /etc/nixos/dotfiles/eww/scripts/volume_speaker.sh
")

(defpoll mic_icon :interval "2s" "
    /etc/nixos/dotfiles/eww/scripts/mic_icon.sh
")
(defpoll volume_mic :interval "2s" "
    /etc/nixos/dotfiles/eww/scripts/volume_mic.sh
")

(defpoll cam_icon :interval "1s" "
    /etc/nixos/dotfiles/eww/scripts/cam_icon.sh
")

(defvar keymap "def")

(defpoll battery_icon :interval "1s" "
    /etc/nixos/dotfiles/eww/scripts/battery_icon.sh
")
(defpoll battery_percent :interval "1s" "/etc/nixos/dotfiles/eww/scripts/battery.sh")

(defvar time_rev false)
(defpoll clock_calendar :interval "1m" "date '+%V %a'")
(defpoll clock_date :interval "1m" "date '+%Y-%m-%d'")
(defpoll clock_hour :interval "1s" "date '+%H'")
(defpoll clock_minute :interval "1s" "date '+%M'")
(defpoll clock_second :interval "1s" "date '+%S'")

(defpoll workspaces :interval "2s" "/etc/nixos/dotfiles/eww/scripts/workspace.sh")

;; Reveal variables

;; Other variables

;; Eww definition
(defvar eww "/etc/profiles/per-user/$USER/bin/eww -c /etc/nixos/dotfiles/eww")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAIN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; Window definition
(defwindow bar
    :monitor 0
    :windowtype "dock"
    :stacking "fg"
    :geometry (geometry 
        :x "0%"
        :y "0%"
        :width "1910px"
        :anchor "top center"
    )
    :wm-ignore false
    :exclusive true
    (bar_module)
)

;; Composing the bar from three parts
(defwidget bar_module []
    (revealer
        :transition "slidedown"
        :reveal bar_rev
        :duration "350ms"
        (box 
            :class "bar"
            :orientation "h"
            (left_section)
            (center_section)
            (right_section)
        )
    )
)

;; Left, center, right
(defwidget left_section []
    (box 
        :space-evenly "false"
        :orientation "h"
        :halign "start"
        :class "section"
        (volume_module)
        (cam_module)
    )
)

(defwidget center_section []
    (box
        :space-evenly "false"
        :orientation "h"
        :halign "center"
        :class "section"
        (workspaces_module)
    )
)

(defwidget right_section []
    (box
        :space-evenly "false"
        :orientation "h"
        :halign "end"
        :class "section"
        (keymap_module)
        (battery_module)
        (time_module)
    )
)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;LEFT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defwidget volume_module []
    (box 
        :orientation "vertical"
        :class "module"
        (speaker)
        (mic)
    )
)
(defwidget speaker []
    (box
        :orientation "horizontal"
        :halign "center"
        :space-evenly false
        (image
            :path speaker_icon
        )
        (label :text volume_speaker)
    )
)
(defwidget mic []
    (box
        :orientation "horizontal"
        :halign "center"
        :space-evenly false
        (image
            :path mic_icon
        )
        (label :text volume_mic)
    )
)
(defwidget cam_module []
    (box
        :class "module" 
        (image
            :path cam_icon
        )
    )
)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CENTER;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defwidget workspaces_module []
    (box
        :class "module workspace"
        :valign "center"
        (literal :content workspaces)
    )
)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;RIGHT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; Battery module
(defwidget battery_module []
    (box
        :orientation "horizontal"
        :class "module"
        :halign "center" 
        :space-evenly false
        (image
            :path battery_icon
        )
        (label :text battery_percent)
    )
)

(defwidget keymap_module []
    (box
        :class "module"
        :orientation "h"
        :space-evenly false
        :halign "center"
        (image
            :path "/etc/nixos/dotfiles/eww/icons/keymap.svg"
        )
        (label :text keymap)
    )
)

(defwidget time_module []
    (box 
        :orientation "horizontal"
        :class "module time"
        :halign "center"
        :space-evenly false
        (eventbox
            :onhover "${eww} update time_rev=true"
            :onhoverlost "${eww} update time_rev=false"
            (box
                :orientation "h"
                :halign "center"
                :space-evenly false
                (revealer
                    :transition "slideleft"
                    :reveal time_rev
                    :duration "350ms"
                    (box
                        :orientation "h"
                        :halign "center"
                        :space-evenly false
                        (image
                            :image-height 48
                            :image-width 48
                            :class "calendar_icon"
                            :path "/etc/nixos/dotfiles/eww/icons/calendar.svg"
                        )
                        (box
                            :orientation "v"
                            :valign "center"
                            :class "calendar"
                            :space-evenly false
                            (label :text clock_date)
                            (label :text clock_calendar)
                        )
                    )
                )
                (image
                    :class "clock_icon"
                    :image-height 48
                    :image-width 48
                    :path "/etc/nixos/dotfiles/eww/icons/clock.svg"
                )
            )
        )
        (label :class "clock_hour" :text clock_hour)
        (box
            :orientation "vertical"
            :space-evenly false
            :class "clock_min_sec"
            :valign "center"
            (label :text clock_minute)
            (label :text clock_second)
        )
    )
)

